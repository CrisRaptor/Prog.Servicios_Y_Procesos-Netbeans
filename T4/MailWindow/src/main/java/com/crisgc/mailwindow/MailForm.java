package com.crisgc.mailwindow;

import jakarta.mail.MessagingException;
import java.awt.Color;
import java.io.IOException;
import javax.swing.JFileChooser;

/**
 *
 * @author CrisGC
 */
public class MailForm extends javax.swing.JFrame {

    private static String selectedFilePath;

    /**
     * Creates new form MailForm
     */
    public MailForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        bntAddFile = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnSendMail = new javax.swing.JButton();
        mailReceiver = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        mailSubject = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mailMessage = new javax.swing.JTextArea();
        textSelectedFile = new javax.swing.JLabel();
        lastSend = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 255));
        jLabel1.setText("MAIL");

        bntAddFile.setBackground(new java.awt.Color(0, 102, 255));
        bntAddFile.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bntAddFile.setText("Add File");
        bntAddFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bntAddFileMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Selected File:");

        btnSendMail.setBackground(new java.awt.Color(0, 102, 255));
        btnSendMail.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSendMail.setText("SEND");
        btnSendMail.setEnabled(false);
        btnSendMail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSendMailMouseClicked(evt);
            }
        });

        mailReceiver.setText("example@gmail.com");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("TO");

        mailSubject.setText("About...");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("SUBJECT");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("MESSAGE");

        mailMessage.setColumns(20);
        mailMessage.setLineWrap(true);
        mailMessage.setRows(5);
        mailMessage.setWrapStyleWord(true);
        mailMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mailMessageKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(mailMessage);

        textSelectedFile.setText("NONE");
        textSelectedFile.setToolTipText("");

        lastSend.setForeground(new java.awt.Color(30, 30, 30));
        lastSend.setText("Last Mail send to: NONE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bntAddFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textSelectedFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSendMail, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mailReceiver, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mailSubject, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lastSend, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lastSend))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mailReceiver)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mailSubject)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bntAddFile)
                    .addComponent(jLabel2)
                    .addComponent(btnSendMail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textSelectedFile))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bntAddFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bntAddFileMouseClicked
        JFileChooser jfseleccionador = new JFileChooser();
        jfseleccionador.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int val = jfseleccionador.showOpenDialog(null);

        if (val == JFileChooser.OPEN_DIALOG) {
            selectedFilePath = jfseleccionador.getSelectedFile().getAbsolutePath();
            String fileName = jfseleccionador.getSelectedFile().getName();
            textSelectedFile.setText(String.valueOf(fileName));
        }
    }//GEN-LAST:event_bntAddFileMouseClicked

    private void btnSendMailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSendMailMouseClicked
        MailService mailService = new MailService();

        try {

            if (mailReceiverValidation()) {
                if (mailSubjectValidation()) {
                    if (mailMessageValidation()) {
                        //Mensaje valido
                        mailService.sendMultipartMessage("cristian.garcia@gmx.com", mailReceiver.getText(), mailSubject.getText(),
                        mailMessage.getText(), "cristian.garcia@gmx.com", "PSPIESBelen", selectedFilePath);
                        
                        lastSend.setText("Ultimo correo enviado a: "+mailReceiver.getText());
                        lastSend.setForeground(new Color(46,102,55));
                        resetFields();
                    } else { //Mensaje invalido
                        colorReset();
                        mailMessage.setBackground(Color.red);
                    }
                } else { //Subject invalido
                    colorReset();
                    mailSubject.setBackground(Color.red);
                }
            } else { //Mail invalido
                colorReset();
                mailReceiver.setBackground(Color.red);
            }

        } catch (MessagingException ex) {
            System.out.println("Error de Mensaje al enviar Mail");
        } catch (IOException ex) {
            System.out.println("Error de IO al enviar Mail");
        }
    }//GEN-LAST:event_btnSendMailMouseClicked

    private void mailMessageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mailMessageKeyPressed
        btnSendMail.setEnabled(mailMessageValidation());
    }//GEN-LAST:event_mailMessageKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MailForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MailForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MailForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MailForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                selectedFilePath = "";
                new MailForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntAddFile;
    private javax.swing.JButton btnSendMail;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lastSend;
    private javax.swing.JTextArea mailMessage;
    private javax.swing.JTextField mailReceiver;
    private javax.swing.JTextField mailSubject;
    private javax.swing.JLabel textSelectedFile;
    // End of variables declaration//GEN-END:variables

    private boolean mailReceiverValidation() {
        boolean validated = false;
        //Mail Reciever validation
        String reciever = mailReceiver.getText();
        int atSymbol = reciever.indexOf("@");
        if (!"example@gmail.com".equals(reciever)) {
            if (!reciever.contains(" ") && !reciever.contains(",") && atSymbol > 0 && atSymbol < reciever.length() - 1) {
                validated = true;
            }
        }
        return validated;
    }

    private boolean mailSubjectValidation() {
        boolean validated = false;
        //Mail Reciever validation
        String subject = mailSubject.getText();

        if (!"About...".equals(subject)) {
            if (!"".equals(subject)) {
                validated = true;
            }
        }
        return validated;
    }

    private boolean mailMessageValidation() {
        boolean validated = false;
        //Mail Reciever validation
        String message = mailMessage.getText();

        if (!"".equals(message)) {
            validated = true;
        }
        return validated;
    }

    private void resetFields() {
        //Reset values
        mailReceiver.setText("example@gmail.com");
        mailSubject.setText("About...");
        mailMessage.setText("");
       
        //Reset file selected
        textSelectedFile.setText("NONE");
        selectedFilePath = "";
        
        //Reset colors
        colorReset();
    }
    
    private void colorReset(){
        //Reset colors
        mailReceiver.setBackground(Color.white);
        mailSubject.setBackground(Color.white);
        mailMessage.setBackground(Color.white);
    }
}

package almacenamientoseguro;

import java.awt.Color;
import java.io.File;
import java.security.Key;
import javax.swing.JFileChooser;

/**
 *
 * @author CrisGC
 */
public class Ventana extends javax.swing.JFrame {

    String chosen_file = "";
    final int KEY_SIZE = 16;

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnSelectFile = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cipherKeyField = new javax.swing.JTextField();
        btnDecode = new javax.swing.JButton();
        btnEncode = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        selectedFileLabel = new javax.swing.JLabel();
        feedbackLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 51, 255));
        jLabel1.setText("Cifrado de archivos");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Elegir archivo");

        btnSelectFile.setBackground(new java.awt.Color(0, 153, 51));
        btnSelectFile.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSelectFile.setText("Archivo");
        btnSelectFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSelectFileMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Clave");

        btnDecode.setBackground(new java.awt.Color(255, 102, 102));
        btnDecode.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDecode.setText("Descifrar archivo");
        btnDecode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDecodeMouseClicked(evt);
            }
        });

        btnEncode.setBackground(new java.awt.Color(102, 102, 255));
        btnEncode.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEncode.setText("Cifrar archivo");
        btnEncode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEncodeMouseClicked(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(153, 153, 153));
        jLabel4.setText("Archivo seleccionado:");

        selectedFileLabel.setForeground(new java.awt.Color(153, 153, 255));
        selectedFileLabel.setText("-");

        feedbackLabel.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(selectedFileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnSelectFile))
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cipherKeyField, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(feedbackLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(btnEncode, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnDecode))))))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(btnSelectFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectedFileLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cipherKeyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDecode)
                    .addComponent(btnEncode, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(feedbackLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 17, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSelectFileMouseClicked
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.dir")));
        int val = fileChooser.showOpenDialog(null);
        if (val == JFileChooser.OPEN_DIALOG) {
            chosen_file = fileChooser.getSelectedFile().getAbsolutePath();
            String fileName = fileChooser.getSelectedFile().getName();
            selectedFileLabel.setText(fileName);
        }
    }//GEN-LAST:event_btnSelectFileMouseClicked

    private void btnEncodeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEncodeMouseClicked
        if (!"".equals(chosen_file) && !"".equals(cipherKeyField.getText().trim())
                && cipherKeyField.getText().trim().length() >= KEY_SIZE)  {
            try {
                Key clave = AESSimpleManager.obtenerClave(cipherKeyField.getText().trim(), KEY_SIZE);
                String text =  new String(FileService.readFile(chosen_file));
                String encodedText = AESSimpleManager.cifrar(text, clave);

                FileService.writeFile(selectedFileLabel.getText() + ".cifrado", encodedText);
                File file = new File(chosen_file.trim());
                file.delete();
                feedbackLabel.setForeground(Color.GREEN);
                feedbackLabel.setText("Archivo cifrado con éxito.");

                resetValues();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        } else {
            feedbackLabel.setForeground(Color.RED);
            feedbackLabel.setText("Fallo al cifrar.");
            if ("".equals(chosen_file)) {
                feedbackLabel.setText(feedbackLabel.getText() + " Archivo no encontrado.");
            } else if ("".equals(cipherKeyField.getText().trim())) {
                feedbackLabel.setText(feedbackLabel.getText() + " Clave vacia invalida.");
            } else if (cipherKeyField.getText().trim().length() < KEY_SIZE) {
                feedbackLabel.setText(feedbackLabel.getText() + " Clave invalida. Requiere 16 caracteres.");
            }
        }
    }//GEN-LAST:event_btnEncodeMouseClicked

    private void btnDecodeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDecodeMouseClicked
        if (!"".equals(chosen_file) && !"".equals(cipherKeyField.getText().trim())
                && cipherKeyField.getText().trim().length() >= KEY_SIZE) {
            try {
                Key clave = AESSimpleManager.obtenerClave(cipherKeyField.getText().trim(), KEY_SIZE);
                String encodedText = new String(FileService.readFile(chosen_file));
                String decodedText = AESSimpleManager.descifrar(encodedText, clave);

                FileService.writeFile(selectedFileLabel.getText().substring(
                        0, selectedFileLabel.getText().lastIndexOf('.')), decodedText);
                File file = new File(chosen_file.trim());
                file.delete();
                feedbackLabel.setForeground(Color.GREEN);
                feedbackLabel.setText("Archivo descifrado con éxito.");

                resetValues();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        } else {
            feedbackLabel.setForeground(Color.RED);
            feedbackLabel.setText("Fallo al descifrar.");
            if ("".equals(chosen_file)) {
                feedbackLabel.setText(feedbackLabel.getText() + " Archivo no encontrado.");
            } else if ("".equals(cipherKeyField.getText().trim())) {
                feedbackLabel.setText(feedbackLabel.getText() + " Clave vacia invalida.");
            } else if (cipherKeyField.getText().trim().length() < KEY_SIZE) {
                feedbackLabel.setText(feedbackLabel.getText() + " Clave invalida. Minimo 16 caracteres.");
            }
        }
    }//GEN-LAST:event_btnDecodeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    private void resetValues() {
        chosen_file = "";
        selectedFileLabel.setText("-");
        cipherKeyField.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDecode;
    private javax.swing.JButton btnEncode;
    private javax.swing.JButton btnSelectFile;
    private javax.swing.JTextField cipherKeyField;
    private javax.swing.JLabel feedbackLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel selectedFileLabel;
    // End of variables declaration//GEN-END:variables
}
